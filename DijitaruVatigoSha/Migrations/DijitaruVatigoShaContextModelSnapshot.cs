// <auto-generated />
using System;
using DijitaruVatigoSha.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DijitaruVatigoSha.Migrations
{
    [DbContext(typeof(DijitaruVatigoShaContext))]
    partial class DijitaruVatigoShaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollaboratorProject", b =>
                {
                    b.Property<int>("CollaboratorsId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("CollaboratorsId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("CollaboratorProject", (string)null);
                });

            modelBuilder.Entity("CollaboratorProject1", b =>
                {
                    b.Property<int>("ApprovableProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("ApproversId")
                        .HasColumnType("int");

                    b.HasKey("ApprovableProjectsId", "ApproversId");

                    b.HasIndex("ApproversId");

                    b.ToTable("ProjectApprover", (string)null);
                });

            modelBuilder.Entity("DijitaruVatigoSha.Models.Collaborator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Gender");

                    b.Property<string>("ModalityString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Modality");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("DijitaruVatigoSha.Models.PendingHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int");

                    b.Property<int>("CollaboratorId")
                        .HasColumnType("int");

                    b.Property<int>("HourAmount")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("CollaboratorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Hours");
                });

            modelBuilder.Entity("DijitaruVatigoSha.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Budget")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Type");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CollaboratorProject", b =>
                {
                    b.HasOne("DijitaruVatigoSha.Models.Collaborator", null)
                        .WithMany()
                        .HasForeignKey("CollaboratorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DijitaruVatigoSha.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CollaboratorProject1", b =>
                {
                    b.HasOne("DijitaruVatigoSha.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ApprovableProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DijitaruVatigoSha.Models.Collaborator", null)
                        .WithMany()
                        .HasForeignKey("ApproversId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DijitaruVatigoSha.Models.PendingHour", b =>
                {
                    b.HasOne("DijitaruVatigoSha.Models.Collaborator", "Approver")
                        .WithMany("ApprovableHours")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DijitaruVatigoSha.Models.Collaborator", "Collaborator")
                        .WithMany("PendingHours")
                        .HasForeignKey("CollaboratorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DijitaruVatigoSha.Models.Project", "Project")
                        .WithMany("PendingHours")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Collaborator");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DijitaruVatigoSha.Models.Collaborator", b =>
                {
                    b.Navigation("ApprovableHours");

                    b.Navigation("PendingHours");
                });

            modelBuilder.Entity("DijitaruVatigoSha.Models.Project", b =>
                {
                    b.Navigation("PendingHours");
                });
#pragma warning restore 612, 618
        }
    }
}
